name: 🛡️ (Code Health Check - QA)

on:
  pull_request_target:
    types:
      - reopened
      - synchronize
  pull_request:
    types:
      - opened
    branches:
      - 'qa'

permissions:
  pull-requests: write
  contents: write

env:
  GITHUB_TOKEN: ${{ secrets.ACTIONS_GITHUB_TOKEN }}

jobs:
  inform:
    name: 🚀 Initializing Code Health Check
    runs-on: ubuntu-latest
    steps:
      - name: 📢 Start PR Validation
        uses: mshick/add-pr-comment@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          repo-token-user-login: 'github-actions[bot]'
          message: |
            ## 🚦 Pull Request Validation Initialized
            🔍 Validating committed files.
            
            🛠️ **Jobs Running** - *Please wait for the results below...*

            🚀 **Triggered by**: @${{ github.actor }}, via *${{ github.event_name }}*

  security_check:
    needs: inform
    name: 🔐 Security Checks
    runs-on: ubuntu-latest
    steps:
      - name: 🔎 Checkout repository
        uses: actions/checkout@v3

      - name: ⚙️ Run security audit
        id: security-audit
        run: npm audit --audit-level=high

      - name: 🛡️ Post Security Audit Failure
        if: steps.security-audit.outcome == 'failure'
        uses: mshick/add-pr-comment@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          repo-token-user-login: 'github-actions[bot]'
          message: |
            ## ⚠️ Security Audit Failed!
            🚨 High or critical vulnerabilities were found.
            
            Please review the audit results and fix the issues:
            ```
            npm audit results...
            ```

  quality_check:
    needs: security_check
    name: ✅ Code Quality and Testing
    runs-on: ubuntu-latest
    steps:
      - name: 🛠️ Checkout repository
        uses: actions/checkout@v3

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🧪 Run Automated Tests
        id: automated-tests
        run: npm test

      - name: 🛠️ SonarCloud Quality Gate
        id: sonar-quality-gate
        uses: SonarSource/sonarcloud-github-action@v2.1.0
        env:
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:          
          args: >
            -Dsonar.projectKey=${{ vars.PROJECT_KEY }}
            -Dsonar.organization=${{ vars.ORGANIZATION }}
            -Dsonar.sources=src
            -Dsonar.tests=tests
            -Dsonar.host.url=https://sonarcloud.io
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}
            -Dsonar.exclusions=node_modules/**,src/main/**,src/core/**,src/domain/**,src/adapters/**,**\*.spec.ts,**\*.test.ts,
            -Dsonar.typescript.tsconfigPath=tsconfig.json
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
            -Dsonar.verbose=true

      - name: 🔎 Fetch SonarQube Results
        id: sonar-results
        run: |
          curl -u ${{ secrets.SONAR_TOKEN }} "https://sonarcloud.io/api/qualitygates/project_status?projectKey=${{ vars.PROJECT_KEY }}" > sonar-report.json
          cat sonar-report.json # Exibe o relatório para validação
        continue-on-error: true

      - name: 📊 Parse SonarQube Results
        id: parse-sonar-results
        run: |
          QUALITY_STATUS=$(cat sonar-report.json | jq -r '.projectStatus.status')
          BUGS=$(cat sonar-report.json | jq -r '.projectStatus.conditions[] | select(.metricKey=="bugs").actualValue // "N/A"')
          VULNERABILITIES=$(cat sonar-report.json | jq -r '.projectStatus.conditions[] | select(.metricKey=="vulnerabilities").actualValue // "N/A"')
          CODE_SMELLS=$(cat sonar-report.json | jq -r '.projectStatus.conditions[] | select(.metricKey=="code_smells").actualValue // "N/A"')
          COVERAGE=$(cat sonar-report.json | jq -r '.projectStatus.conditions[] | select(.metricKey=="coverage").actualValue // "N/A"')
          DUPLICATED_LINES=$(cat sonar-report.json | jq -r '.projectStatus.conditions[] | select(.metricKey=="duplicated_lines_density").actualValue // "N/A"')

          echo "QUALITY_STATUS=$QUALITY_STATUS" >> $GITHUB_ENV
          echo "BUGS=$BUGS" >> $GITHUB_ENV
          echo "VULNERABILITIES=$VULNERABILITIES" >> $GITHUB_ENV
          echo "CODE_SMELLS=$CODE_SMELLS" >> $GITHUB_ENV
          echo "COVERAGE=$COVERAGE" >> $GITHUB_ENV
          echo "DUPLICATED_LINES=$DUPLICATED_LINES" >> $GITHUB_ENV

      - name: 📋 Post Test and Quality Results
        uses: mshick/add-pr-comment@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          repo-token-user-login: 'github-actions[bot]'
          message: |
            ## 🔍 Code Quality and Test Results:
            
            ### ✅ Automated Tests: `${{ steps.automated-tests.outcome }}`.
            ### ✅ SonarQube Quality Gate: `${{ env.QUALITY_STATUS }}`.

            ### SonarQube Report:

            - 🐞 **Bugs**: `${{ env.BUGS }}`
            - 🔐 **Vulnerabilities**: `${{ env.VULNERABILITIES }}`
            - 💨 **Code Smells**: `${{ env.CODE_SMELLS }}`
            - 📊 **Coverage**: `${{ env.COVERAGE }}%`
            - 🧬 **Duplicated Lines**: `${{ env.DUPLICATED_LINES }}%`

            ### Test Results:

            <details><summary>Show Test Results</summary>
            Test summary here...
            </details>

            ### Quality Gate Status:

            **SonarQube Quality Gate Status**: `${{ env.QUALITY_STATUS }}`

            🚀 Pushed by: @${{ github.actor }}, Action: *${{ github.event_name }}*
